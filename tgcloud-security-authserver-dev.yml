spring:
  aop:
    proxy-target-class: true
    auto: true
  mvc:
    date-format: yyyy-MM-dd HH:mm:ss
  jackson:
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    date-format: yyyy-MM-dd HH:mm:ss
  datasource:
    url: jdbc:mysql://mysql.tgcloud.net:3306/tgcloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT

mybatis:
  type-aliases-package: com.tiger.tgcloud.model.domain
  mapper-locations: classpath:mapper/*.xml,classpath*:sdk/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
mapper:
  mappers: com.tiger.tgcloud.core.mybatis.MyMapper
  not-empty: false
  identity: MYSQL
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
security:
  oauth2:
    client:
      clientId: tgcloud-security-authserver
      clientSecret: tgcloudClientSecret
      access-token-uri: http://${GATEWAY_HOST:api.tgcloud.net}:${GATEWAY_PORT:7979}/aus/oauth/token
      user-authorization-uri: http://${GATEWAY_HOST:api.tgcloud.net}:${GATEWAY_PORT:7979}/aus/oauth/authorize
    resource:
      id: tgcloud-security-authserver
      #filter-order: 3

tgcloud:
  enableSqlLogInterceptor: false
  token:
    interceptor:
      enable: true
    client:
      id: ${security.oauth2.resource.id}
      accessTokenUrl: ${security.oauth2.client.access-token-uri}
      clientId: ${security.oauth2.client.clientId}
      clientSecret: ${security.oauth2.client.clientSecret}
      clientAuthenticationScheme: header
  security:
    code:
      image:
        expireIn: 180
        url: /auth/register,/auth/submitResetPwdEmail,/auth/code/sms
      sms:
        expireIn: 600
        url: /auth/submitResetPwdPhone
        mobileMaxSendCount: 1
        ipMaxSendCount: 2
        totalMaxSendCount: 3
    oauth2:
      tokenStore: jwt # redis jwt
      clients[0]:
        clientId: tgcloud-client-gateway
        clientSecret: tgcloudClientSecret
        accessTokenValidateSeconds: 43200
        scope: "*"
      clients[1]:
        clientId: tgcloud-microservice-dmc
        clientSecret: tgcloudClientSecret
        accessTokenValidateSeconds: 43200
        scope: "*"
      clients[2]:
        clientId: tgcloud-microservice-uac
        clientSecret: tgcloudClientSecret
        accessTokenValidateSeconds: 43200
        scope: "*"

logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    org.springframework.cloud.sleuth: DEBUG
    com.tgcloud.modules: TRACE
    org.springframework.security: DEBUG
  path: logs/
  file: ${spring.application.name}.log